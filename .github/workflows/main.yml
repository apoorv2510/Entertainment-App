name: Deploy to EC2 with Docker Compose

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    name: Build and Deploy to EC2
    runs-on: ubuntu-latest

    steps:
    # Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    # Build and Push Docker Images with Docker Compose
    - name: Build and Push Docker Images
      run: |
        docker compose build
        docker compose push

    # Verify SSH Connection to EC2
    - name: Verify SSH Connection
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        port: 22
        script: |
          echo "Testing SSH connection to EC2 instance..."
          hostname
          echo "SSH connection verified successfully!"

    # Deploy Application to EC2 with Docker Compose
    - name: Deploy Application
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        port: 22
        script: |
          # Set environment variables
          echo "Exporting AWS environment variables..."
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          export AWS_SESSION_TOKEN=${{ secrets.AWS_SESSION_TOKEN }}
          export AWS_DEFAULT_REGION=us-east-1

          # Navigate to Docker Compose directory
          echo "Navigating to Docker Compose directory..."
          cd /path/to/docker-compose

          # Stop and remove old containers
          echo "Stopping old containers..."
          docker compose down || true

          # Pull the latest Docker images
          echo "Pulling latest images..."
          docker compose pull

          # Start the updated containers
          echo "Starting containers..."
          docker compose up -d

          echo "Deployment completed successfully!"
